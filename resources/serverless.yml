org: dbkompare
app: db-kompare
service: db-kompare-resources
configValidationMode: error

provider:
  name: aws
  runtime: nodejs20.x
  region: eu-west-1
  stage: ${opt:stage, 'dev'}
  profile: dbkompare

resources:
  Resources:
    S3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: db-kompare-${self:provider.stage}
        PublicAccessBlockConfiguration:
          BlockPublicAcls: false
          BlockPublicPolicy: false
          IgnorePublicAcls: false
          RestrictPublicBuckets: false
        VersioningConfiguration:
          Status: Enabled
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders:
                - "*"
              AllowedMethods:
                - GET
                - HEAD
                - PUT
                - POST
                - DELETE
              AllowedOrigins:
                - "*"
              MaxAge: 3600

    S3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref S3Bucket
        PolicyDocument:
          Id: BucketPolicy
          Version: "2012-10-17"
          Statement:
            - Sid: S3Policy
              Action: s3:*
              Effect: Allow
              Principal: "*"
              Resource: !Sub arn:aws:s3:::${S3Bucket}/*
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: db-kompare-users-${self:provider.stage}
        KeySchema:
          - AttributeName: id
            KeyType: HASH # Primary partition key
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S # String type for id (primary key)
          - AttributeName: status
            AttributeType: S # String type for status
          - AttributeName: role
            AttributeType: S # String type for role
          - AttributeName: email
            AttributeType: S # String type for role
        GlobalSecondaryIndexes:
          - IndexName: byStatusandRole
            KeySchema:
              - AttributeName: status # Partition key for the GSI
                KeyType: HASH
              - AttributeName: role # Sort key for the GSI
                KeyType: RANGE
            Projection:
              ProjectionType: ALL # Include all attributes in the index
          - IndexName: byEmail
            KeySchema:
              - AttributeName: email # Partition key for the GSI
                KeyType: HASH
              - AttributeName: status # Sort key for the GSI
                KeyType: RANGE
            Projection:
              ProjectionType: ALL # Include all attributes in the index
        BillingMode: PAY_PER_REQUEST
    Databases:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: db-kompare-databases-${self:provider.stage}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: status
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: byStatus
            KeySchema:
              - AttributeName: status
                KeyType: HASH
            Projection:
              ProjectionType: ALL
    Blogs:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: db-kompare-blogs-${self:provider.stage}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: status
            AttributeType: S
          - AttributeName: createdAt
            AttributeType: N
          - AttributeName: isPublished
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: byStatus
            KeySchema:
              - AttributeName: status
                KeyType: HASH
              - AttributeName: createdAt
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
          - IndexName: byIsPublished
            KeySchema:
              - AttributeName: isPublished
                KeyType: HASH
              - AttributeName: createdAt
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
    SavedBlogs:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: db-kompare-saved-blogs-${self:provider.stage}
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: blogId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: blogId
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: BlogIdIndex
            KeySchema:
              - AttributeName: blogId
                KeyType: HASH
            Projection:
              ProjectionType: ALL
    Metrices:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: db-kompare-metrices-${self:provider.stage}
        AttributeDefinitions:
          - AttributeName: database_id
            AttributeType: S
          - AttributeName: date
            AttributeType: S
          - AttributeName: includeMe
            AttributeType: S
        KeySchema:
          - AttributeName: database_id
            KeyType: HASH
          - AttributeName: date
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: byStatusAndDate
            KeySchema:
              - AttributeName: includeMe
                KeyType: HASH
              - AttributeName: date
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST
    DatabaseRankings:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: db-kompare-database-rankings-${self:provider.stage}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: date
            AttributeType: S
          - AttributeName: includeMe
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: date
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: byStatusAndDate
            KeySchema:
              - AttributeName: includeMe
                KeyType: HASH
              - AttributeName: date
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST
    Comments:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: db-kompare-comments-${self:provider.stage}
        # DeletionProtectionEnabled: false
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: databaseId
            AttributeType: S
          - AttributeName: repliedTo
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: byRepliedTo
            KeySchema:
              - AttributeName: repliedTo
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: byDatabaseId
            KeySchema:
              - AttributeName: databaseId
                KeyType: HASH
            Projection:
              ProjectionType: ALL
